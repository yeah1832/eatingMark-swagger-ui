openapi: 3.0.0
info:
  title: Places API
  description: 맛집 정보를 관리하는 API로, 맛집을 조회, 저장, 삭제할 수 있습니다.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: 로컬 개발 서버
paths:
  /places:
    get:
      summary: 전체 맛집 목록
      description: 서버에 저장된 모든 맛집 정보를 반환합니다.
      responses:
        200:
          description: 성공적으로 맛집 데이터를 반환함
          content:
            application/json:
              schema:
                type: object
                properties:
                  places:
                    type: array
                    items:
                      type: object
                      description: 맛집 정보 객체
  /users/places:
    get:
      summary: 사용자의 찜한 맛집 목록 조회
      description: 사용자가 찜한 맛집 목록을 반환합니다.
      responses:
        200:
          description: 성공적으로 사용자의 찜한 맛집 데이터를 반환함
          content:
            application/json:
              schema:
                type: object
                properties:
                  places:
                    type: array
                    items:
                      type: object
                      description: 사용자가 찜한 맛집 정보 객체
    post:
      summary: 찜한 맛집 추가
      description: 사용자의 찜한 맛집 목록에 새로운 맛집을 추가합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                place:
                  type: object
                  required:
                    - id
                    - name
                    - description
                    - location
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    location:
                      type: string
      responses:
        200:
          description: 찜한 맛집이 추가됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "찜한 맛집이 성공적으로 저장되었습니다!"

  /users/places/{id}:
    delete:
      summary: 찜한 맛집 삭제
      description: 사용자의 찜한 맛집 목록에서 특정 맛집을 삭제합니다
      parameters:
        - in: path
          name: id
          required: true
          description: 삭제할 맛집의 ID
          schema:
            type: string
      responses:
        200:
          description: 찜한 맛집이 성공적으로 삭제됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "찜한 맛집이 성공적으로 삭제되었습니다!"

